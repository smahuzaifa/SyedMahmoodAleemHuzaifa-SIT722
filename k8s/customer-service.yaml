apiVersion: v1
kind: Service
metadata:
  name: customer-service-w08e1
spec:
  selector: { app: customer-service }
  ports:
    - port: 8002
      targetPort: 8002
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service-w08e1
spec:
  replicas: 1
  revisionHistoryLimit: 1
  progressDeadlineSeconds: 180
  strategy:
    type: RollingUpdate
    rollingUpdate: { maxUnavailable: 1, maxSurge: 0 }
  selector:
    matchLabels: { app: customer-service }
  template:
    metadata:
      labels: { app: customer-service }
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: customer-service
          image: REPLACE_REG/ecomm-customer-service:REPLACE_TAG
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              value: customers
            - name: POSTGRES_HOST
              value: customer-db-w08e1
            - name: POSTGRES_PORT
              value: "5432"
          ports: [{ containerPort: 8002 }]
          readinessProbe:
            httpGet: { path: /health, port: 8002 }
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 12
          livenessProbe:
            httpGet: { path: /health, port: 8002 }
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          resources:
            requests: { cpu: "50m", memory: "128Mi" }
            limits:   { cpu: "300m", memory: "512Mi" }
