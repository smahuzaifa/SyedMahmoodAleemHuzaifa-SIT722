apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-w08e1
  labels: { app: product-service }
spec:
  replicas: 1
  selector: { matchLabels: { app: product-service } }
  template:
    metadata: { labels: { app: product-service } }
    spec:
      containers:
        - name: product-service
          image: REPLACE_REG/ecomm-product-service:REPLACE_TAG
          ports: [ { containerPort: 8000 } ]
          env:
            - name: POSTGRES_HOST
              value: product-db-service-w08e1
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              valueFrom: { configMapKeyRef: { name: ecomm-config-w08e1, key: PRODUCTS_DB_NAME } }
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: POSTGRES_PASSWORD } }
            - name: AZURE_STORAGE_ACCOUNT_NAME
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: AZURE_STORAGE_ACCOUNT_NAME } }
            - name: AZURE_STORAGE_ACCOUNT_KEY
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: AZURE_STORAGE_ACCOUNT_KEY } }
            - name: AZURE_STORAGE_CONTAINER_NAME
              valueFrom: { configMapKeyRef: { name: ecomm-config-w08e1, key: AZURE_STORAGE_CONTAINER_NAME } }
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: RABBITMQ_USER } }
            - name: RABBITMQ_PASSWORD
              valueFrom: { secretKeyRef: { name: ecomm-secrets-w08e1, key: RABBITMQ_PASSWORD } }
          readinessProbe:
            httpGet: { path: /health, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 12
          livenessProbe:
            httpGet: { path: /health, port: 8000 }
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 6
---
apiVersion: v1
kind: Service
metadata:
  name: product-service-w08e1
  labels: { app: product-service }
spec:
  type: LoadBalancer
  selector: { app: product-service }
  ports:
    - name: http
      port: 8000
      targetPort: 8000
