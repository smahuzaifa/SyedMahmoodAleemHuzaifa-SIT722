# Static UI + API gateway to cluster services.
# Make sure the frontend Deployment runs in the SAME namespace as the three services,
# so these service DNS names resolve:
#   product-service-w08e1:8000
#   order-service-w08e1:8001
#   customer-service-w08e1:8002

# Optional upstreams (not strictly required, but tidy)
upstream product_service {
    server product-service-w08e1:8000;
    keepalive 32;
}
upstream order_service {
    server order-service-w08e1:8001;
    keepalive 32;
}
upstream customer_service {
    server customer-service-w08e1:8002;
    keepalive 32;
}

server {
    listen 80;
    server_name _;

    # Serve the built static files
    root /usr/share/nginx/html;
    index index.html;

    # Frontend routes (serve index.html fallback)
    location / {
        try_files $uri /index.html;
    }

    # ---- API proxy (browser -> nginx -> cluster services) ----

    # Products
    location /api/products/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://product_service/;
    }

    # Orders
    location /api/orders/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://order_service/;
    }

    # Customers
    location /api/customers/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://customer_service/;
    }

    # (Optional) increase default client body size if you want to upload images >1MB
    client_max_body_size 10m;
}
